<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sixliu</groupId>
	<artifactId>service-register</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>service-register</name>
	<description>service-register</description>

	<properties>
		<!--java和代码源文件配置 -->
		<java.version>10</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
		<maven-assembly-plugin.version>3.1.0</maven-assembly-plugin.version>
		<maven-jar-plugin.version>3.1.0</maven-jar-plugin.version>
		<!--java和代码源文件配置 -->
		
		<!--jdk 模块化支持 -->
		<jaxb-api.version>2.3.1</jaxb-api.version>
		<jaxb-core.version>2.3.0.1</jaxb-core.version>
		<jaxb-impl.version>2.3.0.1</jaxb-impl.version>
		<jaxb-runtime.version>2.3.0.1</jaxb-runtime.version>
		<activation.version>1.1.1</activation.version>
		<jersey-bundle.version>1.19.4</jersey-bundle.version>
		<!--jdk 模块化支持 -->

		<!--spring boot和spring cloud配置 -->
		<spring-boot-dependencies.version>2.1.0.RELEASE</spring-boot-dependencies.version>
		<spring-cloud-dependencies.version>Greenwich.M1</spring-cloud-dependencies.version>
		<!--spring boot和spring cloud配置 -->
	</properties>

	<dependencyManagement>
		<dependencies>
			<!--jdk模块化依赖 -->
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb-api.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${jaxb-impl.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-core</artifactId>
				<version>${jaxb-core.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>${activation.version}</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jaxb</groupId>
				<artifactId>jaxb-runtime</artifactId>
				<version>${jaxb-runtime.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-bundle</artifactId>
				<version>${jersey-bundle.version}</version>
			</dependency>
			<!--jdk模块化依赖 -->

			<!--spring boot和spring cloud依赖 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--spring boot和spring cloud依赖 -->
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>

		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
		</dependency>

		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-bundle</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<env.devMode>dev</env.devMode>
				<skipAssemblyDEV>false</skipAssemblyDEV>
				<skipAssemblyQA>true</skipAssemblyQA>
				<skipAssemblyPRODUCT>true</skipAssemblyPRODUCT>
				<skipAssemblyPREVIEW>true</skipAssemblyPREVIEW>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<env.devMode>test</env.devMode>
				<skipAssemblyDEV>true</skipAssemblyDEV>
				<skipAssemblyQA>false</skipAssemblyQA>
				<skipAssemblyPRODUCT>true</skipAssemblyPRODUCT>
				<skipAssemblyPREVIEW>true</skipAssemblyPREVIEW>
			</properties>
		</profile>
		<profile>
			<id>product</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<env.devMode>product</env.devMode>
				<skipAssemblyDEV>true</skipAssemblyDEV>
				<skipAssemblyQA>true</skipAssemblyQA>
				<skipAssemblyPRODUCT>false</skipAssemblyPRODUCT>
				<skipAssemblyPREVIEW>true</skipAssemblyPREVIEW>
			</properties>
		</profile>
	</profiles>
	<build>
		<finalName>${project.name}-${project.version}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- 打包配置 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly-dev</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<!--profile声明参数调用:mvn clean package -P dev -->
							<!--是否跳过这个执行器。true:跳过;false:不跳过 -->
							<skipAssembly>${skipAssemblyDEV}</skipAssembly>
							<descriptors>
								<!--加载指定的assembly配置文件 -->
								<descriptor>src/main/assembly/assembly-dev.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>make-assembly-qa</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<skipAssembly>${skipAssemblyQA}</skipAssembly>
							<descriptors>
								<descriptor>src/main/assembly/assembly-test.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>make-assembly-product</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<skipAssembly>${skipAssemblyPRODUCT}</skipAssembly>
							<descriptors>
								<descriptor>src/main/assembly/assembly-product.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
